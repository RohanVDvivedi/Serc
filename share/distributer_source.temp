#include<distributer.h>

// forward declrations of all your controller functions
//@controller_definitions


void distribute(HttpRequest* hrq, HttpResponse* hrp, file_cache* server_file_cache)
{
	// below two lines allow us to use all the string.h std library functions on the dstring
	expand_dstring(&(hrq->path), 1);
	hrq->path.cstring[hrq->path.bytes_occupied] = '\0';

	const char* path_str = hrq->path.cstring;
	unsigned int path_len = hrq->path.bytes_occupied;
	unsigned long long int PATH = getHashValueDstring(&(hrq->path));
	HttpMethod METHOD = hrq->method;

	int routing_resolved = 0;
	int error = 0;

	uncompressHttpRequestBody(hrq);

//@switch_case

	if(routing_resolved == 0)
	{
		// check if we can serve the request with some file, on the server's root
		error = file_request_controller(hrq, hrp, server_file_cache, &routing_resolved);
		if(routing_resolved == 0)
			hrp->status = 404;
	}

	// response for a HEAD request must not contain body
	if(METHOD == HEAD)
		make_dstring_empty(&(hrp->body));

	compressHttpResponseBody(hrp, DEFAULT_COMPRESSION);

	setServerDefaultHeadersInResponse(hrp);
}